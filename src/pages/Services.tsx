import React from 'react';
import { useLanguage } from '../context/LanguageContext';
import ServiceCard from '../components/ServiceCard';
import { 
  Microscope, 
  Stethoscope, 
  Wrench, 
  Scissors, 
  Brush, 
  Smile,
  CheckCircle2,
  Hammer
} from 'lucide-react';

const Services: React.FC = () => {
  const { t, language } = useLanguage();

  const services = [
    {
      title: t('services.service1'),
      description: t('services.service1.description'),
      icon: <Microscope className="h-10 w-10" />,
    },
    {
      title: t('services.service2'),
      description: t('services.service2.description'),
      icon: <Stethoscope className="h-10 w-10" />,
    },
    {
      title: t('services.service3'),
      description: t('services.service3.description'),
      icon: <Wrench className="h-10 w-10" />,
    },
    {
      title: t('services.service4'),
      description: t('services.service4.description'),
      icon: <Scissors className="h-10 w-10" />,
    },
    {
      title: t('services.service5'),
      description: t('services.service5.description'),
      icon: <Brush className="h-10 w-10" />,
    },
    {
      title: t('services.service6'),
      description: t('services.service6.description'),
      icon: <Smile className="h-10 w-10" />,
    },
    {
      title: t('services.service7'),
      description: t('services.service7.description'),
      icon: <CheckCircle2 className="h-10 w-10" />,
    },
    {
      title: t('services.service8'),
      description: t('services.service8.description'),
      icon: <Hammer className="h-10 w-10" />,
    },
  ];

  const osmsContent = {
    kz: {
      title: "–ú”ò–ú–°",
      description: "–ú”ò–ú–° –º–µ–º–ª–µ–∫–µ—Ç—Ç—ñ–∫ –±–∞“ì–¥–∞—Ä–ª–∞–º–∞—Å—ã –±–µ–ª–≥—ñ–ª—ñ –±—ñ—Ä —Å–∞–Ω–∞—Ç—Ç–∞“ì—ã –∞–∑–∞–º–∞—Ç—Ç–∞—Ä“ì–∞ —Ç–µ–≥—ñ–Ω —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è–ª—ã“õ “õ—ã–∑–º–µ—Ç—Ç–µ—Ä –∞–ª—É“ì–∞ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫ –±–µ—Ä–µ–¥—ñ.",
      servicesTitle: "üìå –ú”ò–ú–°-–∫–µ –Ω–µ –∫—ñ—Ä–µ–¥—ñ?",
      services: [
        "‚úÖ –ñ–µ–¥–µ–ª —Ç—ñ—Å –∞—É—Ä—É—ã–Ω –µ–º–¥–µ—É",
        "‚úÖ –¢—ñ—Å –∂“±–ª—É",
        "‚úÖ –ü–ª–æ–º–±–∞ —Å–∞–ª—É",
        "‚úÖ –•–∏—Ä—É—Ä–≥–∏—è–ª—ã“õ –∫”©–º–µ–∫"
      ],
      eligibilityTitle: "üí° –ö—ñ–º–¥–µ—Ä —Ç–µ–≥—ñ–Ω –∞–ª–∞ –∞–ª–∞–¥—ã?",
      eligibility: [
        "üë∂ 18 –∂–∞—Å“õ–∞ –¥–µ–π—ñ–Ω–≥—ñ –±–∞–ª–∞–ª–∞—Ä",
        "ü§∞ –ñ“Ø–∫—Ç—ñ ”ô–π–µ–ª–¥–µ—Ä",
        "üë¥ –ó–µ–π–Ω–µ—Ç–∫–µ—Ä–ª–µ—Ä",
        "ü¶∑ ”ò–ª–µ—É–º–µ—Ç—Ç—ñ–∫ –º–∞“£—ã–∑—ã –±–∞—Ä –∞—É—Ä—É–ª–∞—Ä—ã –±–∞—Ä –∞–¥–∞–º–¥–∞—Ä"
      ]
    },
    ru: {
      title: "–û–°–ú–°",
      description: "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –û–°–ú–° –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≥—Ä–∞–∂–¥–∞–Ω.",
      servicesTitle: "üìå –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –û–°–ú–°?",
      services: [
        "‚úÖ –õ–µ—á–µ–Ω–∏–µ –æ—Å—Ç—Ä–æ–π –∑—É–±–Ω–æ–π –±–æ–ª–∏",
        "‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–æ–≤",
        "‚úÖ –ü–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "‚úÖ –•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å"
      ],
      eligibilityTitle: "üí° –ö—Ç–æ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —É—Å–ª—É–≥–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ?",
      eligibility: [
        "üë∂ –î–µ—Ç–∏ –¥–æ 18 –ª–µ—Ç",
        "ü§∞ –ë–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∂–µ–Ω—â–∏–Ω—ã",
        "üë¥ –ü–µ–Ω—Å–∏–æ–Ω–µ—Ä—ã",
        "ü¶∑ –õ—é–¥–∏ —Å —Å–æ—Ü–∏–∞–ª—å–Ω–æ –∑–Ω–∞—á–∏–º—ã–º–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º–∏"
      ]
    }
  };

  const content = language === 'kz' ? osmsContent.kz : osmsContent.ru;

  const processContent = {
    kz: {
      title: "–ë—ñ–∑–¥—ñ“£ “Ø–¥–µ—Ä—ñ—Å",
      description: "–ë—ñ–∑ –∞—É—ã–∑ “õ—É—ã—Å—ã–Ω—ã“£ –∂–æ“ì–∞—Ä—ã —Å–∞–ø–∞–ª—ã –∫“Ø—Ç—ñ–º—ñ–Ω “õ–∞–º—Ç–∞–º–∞—Å—ã–∑ –µ—Ç—É “Ø—à—ñ–Ω –±—ñ—Ä–Ω–µ—à–µ “õ–∞–¥–∞–º –∂–∞—Å–∞–π–º—ã–∑",
      steps: [
        {
          title: "–¢–µ–∫—Å–µ—Ä—É",
          description: "–ë—ñ–∑–¥—ñ“£ —Ç—ñ—Å –¥”ô—Ä—ñ–≥–µ—Ä–ª–µ—Ä—ñ–º—ñ–∑ —Å—ñ–∑–¥—ñ“£ –∞—É—ã–∑ “õ—É—ã—Å—ã–Ω—ã“£ –¥–µ–Ω—Å–∞—É–ª—ã“ì—ã–Ω —Ç–µ–∫—Å–µ—Ä–µ–¥—ñ –∂”ô–Ω–µ –º”ô—Å–µ–ª–µ–ª–µ—Ä–¥—ñ –∞–Ω—ã“õ—Ç–∞–π–¥—ã."
        },
        {
          title: "–ï–º–¥–µ—É –∂–æ—Å–ø–∞—Ä—ã",
          description: "–¢–µ–∫—Å–µ—Ä—É –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ–Ω–µ —Å“Ø–π–µ–Ω–µ –æ—Ç—ã—Ä—ã–ø, –±—ñ–∑ —Å—ñ–∑–¥—ñ“£ “õ–∞–∂–µ—Ç—Ç—ñ–ª—ñ–∫—Ç–µ—Ä—ñ“£—ñ–∑–≥–µ —Å”ô–π–∫–µ—Å –µ–º–¥–µ—É –∂–æ—Å–ø–∞—Ä—ã–Ω “±—Å—ã–Ω–∞–º—ã–∑."
        },
        {
          title: "–ï–º–¥–µ—É",
          description: "–ë—ñ–∑–¥—ñ“£ —Ç”ô–∂—ñ—Ä–∏–±–µ–ª—ñ —Ç—ñ—Å –¥”ô—Ä—ñ–≥–µ—Ä–ª–µ—Ä—ñ–º—ñ–∑ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è–ª—ã“õ –∫”©–º–µ–∫—Ç—ñ –¥”ô–ª, –∂–∞–π–ª—ã –∂”ô–Ω–µ —Ç–∏—ñ–º–¥—ñ –∂–æ–ª–º–µ–Ω –∫”©—Ä—Å–µ—Ç–µ–¥—ñ."
        }
      ]
    },
    ru: {
      title: "–ù–∞—à –ø—Ä–æ—Ü–µ—Å—Å",
      description: "–ú—ã –¥–µ–ª–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É—Ö–æ–¥–∞ –∑–∞ –ø–æ–ª–æ—Å—Ç—å—é —Ä—Ç–∞",
      steps: [
        {
          title: "–û—Å–º–æ—Ç—Ä",
          description: "–ù–∞—à–∏ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç –∑–¥–æ—Ä–æ–≤—å–µ –≤–∞—à–µ–π –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞ –∏ –≤—ã—è–≤–ª—è—é—Ç –ø—Ä–æ–±–ª–µ–º—ã."
        },
        {
          title: "–ü–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è",
          description: "–ù–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Å–º–æ—Ç—Ä–∞ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –≤–∞—à–∏–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º."
        },
        {
          title: "–õ–µ—á–µ–Ω–∏–µ",
          description: "–ù–∞—à–∏ –æ–ø—ã—Ç–Ω—ã–µ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏ –æ–∫–∞–∑—ã–≤–∞—é—Ç —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å —Ç–æ—á–Ω–æ, –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ."
        }
      ]
    }
  };

  const currentProcess = language === 'kz' ? processContent.kz : processContent.ru;

  const ctaContent = {
    kz: {
      title: "–ë“Ø–≥—ñ–Ω –∂–∞–∑—ã–ª—ã“£—ã–∑",
      description: "–°—ñ–∑–¥—ñ“£ –∞—É—ã–∑ “õ—É—ã—Å—ã–Ω—ã“£ –¥–µ–Ω—Å–∞—É–ª—ã“ì—ã–Ω–∞ “õ–∞–º“õ–æ—Ä–ª—ã“õ –∂–∞—Å–∞—É–¥—ã –±–∞—Å—Ç–∞—É “Ø—à—ñ–Ω –±—ñ–∑–≥–µ –∂–∞–∑—ã–ª—ã“£—ã–∑"
    },
    ru: {
      title: "–ó–∞–ø–∏—à–∏—Ç–µ—Å—å —Å–µ–≥–æ–¥–Ω—è",
      description: "–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –∫ –Ω–∞–º, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –∑–¥–æ—Ä–æ–≤—å–µ –≤–∞—à–µ–π –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞"
    }
  };

  return (
    <>
      {/* Hero Section */}
      <section className="relative pt-32 pb-20 bg-primary-800 text-white">
        <div className="absolute inset-0 z-0">
          <img 
            src="assets/background.jpg" 
            alt="Dental equipment" 
            className="w-full h-full object-cover opacity-20"
          />
        </div>
        <div className="absolute inset-0 bg-primary-900 opacity-60 z-0"></div>
        
        <div className="container mx-auto px-4 relative z-10">
          <div className="max-w-3xl mx-auto text-center">
            <h1 className="text-4xl md:text-5xl font-bold mb-6">{t('services.title')}</h1>
            <p className="text-xl text-gray-200">{t('services.subtitle')}</p>
          </div>
        </div>
        
        <div className="absolute bottom-0 left-0 w-full">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" className="w-full h-auto">
            <path fill="#f97316" fillOpacity="1" d="M0,288L48,272C96,256,192,224,288,197.3C384,171,480,149,576,165.3C672,181,768,235,864,250.7C960,267,1056,245,1152,224C1248,203,1344,181,1392,170.7L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
          </svg>
        </div>
      </section>

      {/* Services Section */}
      <section className="py-16 bg-white">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {services.map((service, index) => (
              <ServiceCard 
                key={index}
                title={service.title}
                description={service.description}
                icon={service.icon}
              />
            ))}
          </div>
        </div>
      </section>

      {/* M”òMS/OSMS Section */}
      <section id="osms" className="py-16 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="bg-primary-50 rounded-xl p-8 border border-primary-100 relative overflow-hidden">
            <div className="absolute top-0 right-0 w-64 h-64 bg-primary-500 opacity-10 rounded-full -mr-32 -mt-32"></div>
            
            <div className="flex flex-col md:flex-row items-start justify-between relative z-10">
              <div className="mb-6 md:mb-0 md:w-2/3">
                <h2 className="text-2xl font-bold mb-6 text-primary-800">
                  {content.title}
                </h2>

                <p className="text-gray-700 text-lg mb-8">
                  {content.description}
                </p>

                <div className="mb-8">
                  <h3 className="text-xl font-semibold mb-4 text-primary-700">{content.servicesTitle}</h3>
                  <ul className="space-y-3">
                    {content.services.map((service, index) => (
                      <li key={index} className="text-gray-700">{service}</li>
                    ))}
                  </ul>
                </div>

                <div>
                  <h3 className="text-xl font-semibold mb-4 text-primary-700">{content.eligibilityTitle}</h3>
                  <ul className="space-y-3">
                    {content.eligibility.map((item, index) => (
                      <li key={index} className="text-gray-700">{item}</li>
                    ))}
                  </ul>
                </div>
              </div>
              
              <img 
                src="assets/zh-sh-1.jpg" 
                alt="Free dental services" 
                className="w-full md:w-1/3 rounded-lg shadow-md"
              />
            </div>
          </div>
        </div>
      </section>

      {/* Process Section */}
      <section className="py-16 bg-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-800 mb-4">{currentProcess.title}</h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              {currentProcess.description}
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {currentProcess.steps.map((step, index) => (
              <div key={index} className="relative">
                <div className="bg-primary-100 rounded-full w-16 h-16 flex items-center justify-center mb-4 z-10 relative">
                  <span className="text-2xl font-bold text-primary-600">{index + 1}</span>
                </div>
                {index < currentProcess.steps.length - 1 && (
                  <div className="hidden md:block absolute top-8 left-16 w-full h-1 bg-primary-100 -z-10"></div>
                )}
                <h3 className="text-xl font-semibold mb-3 text-gray-800">{step.title}</h3>
                <p className="text-gray-600">{step.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA */}
      <section className="py-16 bg-primary-800 text-white">
        <div className="container mx-auto px-4 text-center">
          <h2 className="text-3xl font-bold mb-6">{language === 'kz' ? ctaContent.kz.title : ctaContent.ru.title}</h2>
          <p className="text-xl text-gray-200 mb-8 max-w-2xl mx-auto">
            {language === 'kz' ? ctaContent.kz.description : ctaContent.ru.description}
          </p>
          
          <a 
            href="https://wa.me/77777894828"
            target="_blank"
            rel="noopener noreferrer"
            className="bg-accent-500 hover:bg-accent-600 text-white px-8 py-3 rounded-full text-lg font-medium transition-colors inline-block"
          >
            {language === 'kz' ? '–ñ–∞–∑—ã–ª—É' : '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è'}
          </a>
        </div>
      </section>
    </>
  );
};

export default Services;